{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\fe2-09.22-group-fe10-mentorships\\\\05.Mentor Class - React\\\\Mentorship-7\\\\src\\\\components\\\\CreatePost\\\\CreatePost.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport styles from \"./CreatePost.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreatePost = _ref => {\n  _s();\n\n  let {\n    onNewCreatedPost\n  } = _ref;\n  const [isDisabled, setIsDisabled] = useState(true); // individual states\n\n  const [userName, setUserName] = useState(\"\");\n  const [title, setTitle] = useState(\"\"); // combined, object state\n\n  const [newPost, setNewPost] = useState({\n    userName: \"\",\n    title: \"\",\n    description: \"\",\n    dateCreated: \"\",\n    imgUrl: \"\"\n  });\n  const [userList, setUserList] = useState([]);\n\n  const handleInput = e => {\n    console.log(\"target input field:\", e.target.name);\n    const inputName = e.target.name;\n    const inputValue = e.target.value.trim();\n    const dateCreated = format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\");\n    const titleValue = newPost[\"title\"];\n    const titleValueSecond = newPost.title; //\n\n    setNewPost({ ...newPost,\n      [inputName]: inputValue,\n      dateCreated: dateCreated\n    });\n  };\n\n  const onPostSubmit = e => {\n    e.preventDefault();\n    onNewCreatedPost(newPost); // reset form\n\n    setNewPost({\n      userName: \"\",\n      title: \"\",\n      description: \"\",\n      dateCreated: \"\",\n      imgUrl: \"\"\n    });\n  };\n\n  useEffect(() => {\n    let isButtonDisabled = true;\n\n    if (newPost.userName.length !== 0 && newPost.description.length !== 0 && newPost.title.length !== 0 && newPost.imgUrl.length !== 0) {\n      isButtonDisabled = false;\n    }\n\n    setIsDisabled(isButtonDisabled);\n  }, [newPost]);\n\n  const loadData = e => {\n    console.log(e);\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(response => {\n      setUserList(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.CreateForm,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.FormTitle,\n      children: \"Enter a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onPostSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Post Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: newPost.title,\n          onChange: e => handleInput(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Post Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: newPost.description,\n          onChange: e => handleInput(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"User:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"userName\",\n          value: newPost.userName,\n          onClick: e => loadData(e),\n          onChange: e => handleInput(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: newPost.userName,\n            children: \"Select user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), userList.map(user => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.name,\n              children: user.name\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"imgUrl\",\n          value: newPost.imgUrl,\n          onChange: e => handleInput(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isDisabled,\n        type: \"submit\",\n        className: styles.SubmitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"SbxMjOMzbkaVLnEuOMa1BxLiY3g=\");\n\n_c = CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/portfolio/fe2-09.22-group-fe10-mentorships/05.Mentor Class - React/Mentorship-7/src/components/CreatePost/CreatePost.tsx"],"names":["React","useEffect","useState","format","styles","CreatePost","onNewCreatedPost","isDisabled","setIsDisabled","userName","setUserName","title","setTitle","newPost","setNewPost","description","dateCreated","imgUrl","userList","setUserList","handleInput","e","console","log","target","name","inputName","inputValue","value","trim","Date","titleValue","titleValueSecond","onPostSubmit","preventDefault","isButtonDisabled","length","loadData","fetch","then","response","json","CreateForm","FormTitle","map","user","id","SubmitButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport styles from \"./CreatePost.module.css\";\nimport { User } from \"./types\";\nimport { PostType } from \"../../assets/posts\";\n\nexport const CreatePost = ({ onNewCreatedPost }) => {\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // individual states\n  const [userName, setUserName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  // combined, object state\n  const [newPost, setNewPost] = useState<PostType>({\n    userName: \"\",\n    title: \"\",\n    description: \"\",\n    dateCreated: \"\",\n    imgUrl: \"\",\n  });\n  const [userList, setUserList] = useState<User[]>([]);\n\n  const handleInput = (\n    e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>\n  ) => {\n    console.log(\"target input field:\", e.target.name);\n    const inputName = e.target.name;\n    const inputValue = e.target.value.trim();\n    const dateCreated = format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\");\n    const titleValue = newPost[\"title\"];\n    const titleValueSecond = newPost.title;\n    //\n    setNewPost({\n      ...newPost,\n      [inputName]: inputValue,\n      dateCreated: dateCreated,\n    });\n  };\n\n  const onPostSubmit = (e) => {\n    e.preventDefault();\n    onNewCreatedPost(newPost);\n    // reset form\n    setNewPost({\n      userName: \"\",\n      title: \"\",\n      description: \"\",\n      dateCreated: \"\",\n      imgUrl: \"\",\n    });\n  };\n\n  useEffect(() => {\n    let isButtonDisabled = true;\n    if (\n      newPost.userName.length !== 0 &&\n      newPost.description.length !== 0 &&\n      newPost.title.length !== 0 &&\n      newPost.imgUrl.length !== 0\n    ) {\n      isButtonDisabled = false;\n    }\n    setIsDisabled(isButtonDisabled);\n  }, [newPost]);\n\n  const loadData = (e: any) => {\n    console.log(e);\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((response) => {\n        setUserList(response);\n      });\n  };\n\n  return (\n    <div className={styles.CreateForm}>\n      <span className={styles.FormTitle}>Enter a new post</span>\n      <form onSubmit={(e) => onPostSubmit(e)}>\n        <label>\n          Post Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={newPost.title}\n            onChange={(e) => handleInput(e)}\n          />\n        </label>\n        <label>\n          Post Description:\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={newPost.description}\n            onChange={(e) => handleInput(e)}\n          />\n        </label>\n        <label>\n          User:\n          <select\n            name=\"userName\"\n            value={newPost.userName}\n            onClick={(e) => loadData(e)}\n            onChange={(e) => handleInput(e)}\n          >\n            <option value={newPost.userName}>Select user</option>\n            {userList.map((user) => {\n              return (\n                <option key={user.id} value={user.name}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n        <label>\n          Image URL:\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            value={newPost.imgUrl}\n            onChange={(e) => handleInput(e)}\n          />\n        </label>\n        <button\n          disabled={isDisabled}\n          type=\"submit\"\n          className={styles.SubmitButton}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}