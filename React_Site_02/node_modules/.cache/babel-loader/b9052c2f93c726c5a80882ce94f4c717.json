{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\fe2-09.22-group-fe10-mentorships\\\\05.Mentor Class - React\\\\Mentorship-7\\\\src\\\\hoc\\\\ThemeProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { DarkModeContext } from '../context/DarkModeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeProvider = props => {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  const color = theme === 'light' ? '#333' : '#fff';\n  const backgroundColor = theme === 'light' ? '#fff' : '#333';\n  document.body.style.color = color;\n  document.body.style.backgroundColor = backgroundColor;\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme,\n      darkMode: theme === 'dark'\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = ThemeProvider;\nexport default ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["D:/portfolio/fe2-09.22-group-fe10-mentorships/05.Mentor Class - React/Mentorship-7/src/hoc/ThemeProvider.tsx"],"names":["useState","DarkModeContext","ThemeProvider","props","theme","setTheme","toggleTheme","color","backgroundColor","document","body","style","darkMode","children"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAmB,OAAnB,CAAlC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAR;AACD,GAFD;;AAIA,QAAMG,KAAK,GAAGH,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,MAA3C;AAEA,QAAMI,eAAe,GAAGJ,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,MAArD;AAEAK,EAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBJ,KAApB,GAA4BA,KAA5B;AACAE,EAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBH,eAApB,GAAsCA,eAAtC;AAEA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAF;AAASE,MAAAA,WAAT;AAAsBM,MAAAA,QAAQ,EAAER,KAAK,KAAK;AAA1C,KAAjC;AAAA,cACGD,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnBD;;GAAMX,a;;KAAAA,a;AAqBN,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\nimport { DarkModeContext } from '../context/DarkModeContext';\n\nconst ThemeProvider = (props) => {\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  const color = theme === 'light' ? '#333' : '#fff';\n\n  const backgroundColor = theme === 'light' ? '#fff' : '#333';\n\n  document.body.style.color = color;\n  document.body.style.backgroundColor = backgroundColor;\n\n  return (\n    <DarkModeContext.Provider value={{ theme, toggleTheme, darkMode: theme === 'dark' }}>\n      {props.children}\n    </DarkModeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n"]},"metadata":{},"sourceType":"module"}